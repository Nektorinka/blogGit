{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GIT/blogGit/blogGit/src/components/Forms/CeateNewArticle.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport './signUp.scss';\nimport { renderTags } from './formsFunctions';\nimport { myService } from '../../services/serviceApi';\nimport NewArticleForm from './NewArticleForm';\n\nfunction CreateNewArticle({\n  mainState,\n  history\n}) {\n  const [tagsState, setTag] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    isLogged\n  } = mainState;\n\n  const onSubmit = data => {\n    const {\n      token\n    } = mainState.loggedInfo.user;\n    data.tags = tagsState;\n    myService.createArticle(token, data).then(res => history.push('/'));\n  };\n\n  if (!isLogged) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }\n    });\n  }\n\n  console.log(mainState);\n  return /*#__PURE__*/React.createElement(NewArticleForm, {\n    mainState: mainState,\n    isLogged: isLogged,\n    history: history,\n    onSubmit: onSubmit,\n    tagsState: tagsState,\n    setTag: setTag,\n    isLogged: isLogged,\n    register: register,\n    errors: errors,\n    createArticle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  });\n}\n\nconst mapStateToProps = state => {\n  return {\n    mainState: state.mainReducer\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(CreateNewArticle));","map":{"version":3,"sources":["/Users/apple/Documents/GIT/blogGit/blogGit/src/components/Forms/CeateNewArticle.jsx"],"names":["React","useState","useEffect","connect","useForm","Redirect","withRouter","renderTags","myService","NewArticleForm","CreateNewArticle","mainState","history","tagsState","setTag","register","handleSubmit","errors","isLogged","onSubmit","data","token","loggedInfo","user","tags","createArticle","then","res","push","console","log","mapStateToProps","state","mainReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAA1B,EAAkD;AACjD,QAAM,CAAEC,SAAF,EAAaC,MAAb,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCb,OAAO,EAAlD;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAAeP,SAArB;;AAEA,QAAMQ,QAAQ,GAAIC,IAAD,IAAU;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAYV,SAAS,CAACW,UAAV,CAAqBC,IAAvC;AACAH,IAAAA,IAAI,CAACI,IAAL,GAAYX,SAAZ;AACAL,IAAAA,SAAS,CAACiB,aAAV,CAAwBJ,KAAxB,EAA+BD,IAA/B,EAAqCM,IAArC,CAA2CC,GAAD,IAASf,OAAO,CAACgB,IAAR,CAAa,GAAb,CAAnD;AACA,GAJD;;AAMA,MAAI,CAACV,QAAL,EAAe;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACDW,EAAAA,OAAO,CAACC,GAAR,CAAYnB,SAAZ;AACA,sBACC,oBAAC,cAAD;AACC,IAAA,SAAS,EAAEA,SADZ;AAEC,IAAA,QAAQ,EAAEO,QAFX;AAGC,IAAA,OAAO,EAAEN,OAHV;AAIC,IAAA,QAAQ,EAAEO,QAJX;AAKC,IAAA,SAAS,EAAEN,SALZ;AAMC,IAAA,MAAM,EAAEC,MANT;AAOC,IAAA,QAAQ,EAAEI,QAPX;AAQC,IAAA,QAAQ,EAAEH,QARX;AASC,IAAA,MAAM,EAAEE,MATT;AAUC,IAAA,aAAa,EAAE,IAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAcA;;AAED,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNrB,IAAAA,SAAS,EAAEqB,KAAK,CAACC;AADX,GAAP;AAGA,CAJD;;AAMA,eAAe3B,UAAU,CAACH,OAAO,CAAC4B,eAAD,CAAP,CAAyBrB,gBAAzB,CAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport './signUp.scss';\nimport { renderTags } from './formsFunctions';\nimport { myService } from '../../services/serviceApi';\nimport NewArticleForm from './NewArticleForm';\n\nfunction CreateNewArticle({ mainState, history }) {\n\tconst [ tagsState, setTag ] = useState([]);\n\n\tconst { register, handleSubmit, errors } = useForm();\n\n\tconst { isLogged } = mainState;\n\n\tconst onSubmit = (data) => {\n\t\tconst { token } = mainState.loggedInfo.user;\n\t\tdata.tags = tagsState;\n\t\tmyService.createArticle(token, data).then((res) => history.push('/'));\n\t};\n\n\tif (!isLogged) {\n\t\treturn <Redirect to=\"/sign-in\" />;\n\t}\n\tconsole.log(mainState);\n\treturn (\n\t\t<NewArticleForm\n\t\t\tmainState={mainState}\n\t\t\tisLogged={isLogged}\n\t\t\thistory={history}\n\t\t\tonSubmit={onSubmit}\n\t\t\ttagsState={tagsState}\n\t\t\tsetTag={setTag}\n\t\t\tisLogged={isLogged}\n\t\t\tregister={register}\n\t\t\terrors={errors}\n\t\t\tcreateArticle={true}\n\t\t/>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmainState: state.mainReducer\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps)(CreateNewArticle));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import ServiceApi from '../../services/serviceApi';\nimport { myService } from '../../services/serviceApi';\nexport function setArticlesInStore(payload) {\n  return {\n    type: 'LOAD_ARTICLES',\n    payload\n  };\n}\nexport function setLoad() {\n  return {\n    type: 'SET_LOAD'\n  };\n}\nexport function setUnLoad() {\n  return {\n    type: 'SET_UNLOAD'\n  };\n}\nexport function setError() {\n  return {\n    type: 'SET_ERROR'\n  };\n}\nexport function loadArticles(page, token = null) {\n  return async function cb(dispatch) {\n    try {\n      dispatch(setLoad());\n      const response = await myService.getAutArticles(page, token);\n      const res = await dispatch(setArticlesInStore(response));\n      return res;\n    } catch (error) {\n      dispatch(setLoad());\n      const response = await myService.getAutArticles(page, token);\n      const res = await dispatch(setArticlesInStore(response));\n      return res;\n    }\n  };\n}\nexport function setUserInfo(payload) {\n  return {\n    type: 'SIGN_UP',\n    payload\n  };\n}\nexport function logIn(payload) {\n  return {\n    type: 'LOG_IN',\n    payload\n  };\n}\nexport function setErrorInMain(payload) {\n  return {\n    type: 'SET_ERROR_IN_MAIN',\n    payload\n  };\n}\nexport function logOut() {\n  return {\n    type: 'LOG_OUT'\n  };\n}","map":{"version":3,"sources":["/Users/apple/Documents/GIT/blogGit/blogGit/src/Redux/Actions/actions.js"],"names":["ServiceApi","myService","setArticlesInStore","payload","type","setLoad","setUnLoad","setError","loadArticles","page","token","cb","dispatch","response","getAutArticles","res","error","setUserInfo","logIn","setErrorInMain","logOut"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,2BAAvB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,OAAO,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AAC3C,SAAO;AACNC,IAAAA,IAAI,EAAE,eADA;AAEND,IAAAA;AAFM,GAAP;AAIA;AACD,OAAO,SAASE,OAAT,GAAmB;AACzB,SAAO;AACND,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AACD,OAAO,SAASE,SAAT,GAAqB;AAC3B,SAAO;AACNF,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED,OAAO,SAASG,QAAT,GAAoB;AAC1B,SAAO;AACNH,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED,OAAO,SAASI,YAAT,CAAsBC,IAAtB,EAA4BC,KAAK,GAAG,IAApC,EAA0C;AAChD,SAAO,eAAeC,EAAf,CAAkBC,QAAlB,EAA4B;AAClC,QAAI;AACHA,MAAAA,QAAQ,CAACP,OAAO,EAAR,CAAR;AACA,YAAMQ,QAAQ,GAAG,MAAMZ,SAAS,CAACa,cAAV,CAAyBL,IAAzB,EAA+BC,KAA/B,CAAvB;AACA,YAAMK,GAAG,GAAG,MAAMH,QAAQ,CAACV,kBAAkB,CAACW,QAAD,CAAnB,CAA1B;AACA,aAAOE,GAAP;AACA,KALD,CAKE,OAAOC,KAAP,EAAc;AACfJ,MAAAA,QAAQ,CAACP,OAAO,EAAR,CAAR;AACA,YAAMQ,QAAQ,GAAG,MAAMZ,SAAS,CAACa,cAAV,CAAyBL,IAAzB,EAA+BC,KAA/B,CAAvB;AACA,YAAMK,GAAG,GAAG,MAAMH,QAAQ,CAACV,kBAAkB,CAACW,QAAD,CAAnB,CAA1B;AACA,aAAOE,GAAP;AACA;AACD,GAZD;AAaA;AAED,OAAO,SAASE,WAAT,CAAqBd,OAArB,EAA8B;AACpC,SAAO;AACNC,IAAAA,IAAI,EAAE,SADA;AAEND,IAAAA;AAFM,GAAP;AAIA;AAED,OAAO,SAASe,KAAT,CAAef,OAAf,EAAwB;AAC9B,SAAO;AACNC,IAAAA,IAAI,EAAE,QADA;AAEND,IAAAA;AAFM,GAAP;AAIA;AACD,OAAO,SAASgB,cAAT,CAAwBhB,OAAxB,EAAiC;AACvC,SAAO;AACNC,IAAAA,IAAI,EAAE,mBADA;AAEND,IAAAA;AAFM,GAAP;AAIA;AACD,OAAO,SAASiB,MAAT,GAAkB;AACxB,SAAO;AACNhB,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA","sourcesContent":["import ServiceApi from '../../services/serviceApi';\nimport { myService } from '../../services/serviceApi';\n\nexport function setArticlesInStore(payload) {\n\treturn {\n\t\ttype: 'LOAD_ARTICLES',\n\t\tpayload\n\t};\n}\nexport function setLoad() {\n\treturn {\n\t\ttype: 'SET_LOAD'\n\t};\n}\nexport function setUnLoad() {\n\treturn {\n\t\ttype: 'SET_UNLOAD'\n\t};\n}\n\nexport function setError() {\n\treturn {\n\t\ttype: 'SET_ERROR'\n\t};\n}\n\nexport function loadArticles(page, token = null) {\n\treturn async function cb(dispatch) {\n\t\ttry {\n\t\t\tdispatch(setLoad());\n\t\t\tconst response = await myService.getAutArticles(page, token);\n\t\t\tconst res = await dispatch(setArticlesInStore(response));\n\t\t\treturn res;\n\t\t} catch (error) {\n\t\t\tdispatch(setLoad());\n\t\t\tconst response = await myService.getAutArticles(page, token);\n\t\t\tconst res = await dispatch(setArticlesInStore(response));\n\t\t\treturn res;\n\t\t}\n\t};\n}\n\nexport function setUserInfo(payload) {\n\treturn {\n\t\ttype: 'SIGN_UP',\n\t\tpayload\n\t};\n}\n\nexport function logIn(payload) {\n\treturn {\n\t\ttype: 'LOG_IN',\n\t\tpayload\n\t};\n}\nexport function setErrorInMain(payload) {\n\treturn {\n\t\ttype: 'SET_ERROR_IN_MAIN',\n\t\tpayload\n\t};\n}\nexport function logOut() {\n\treturn {\n\t\ttype: 'LOG_OUT'\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}
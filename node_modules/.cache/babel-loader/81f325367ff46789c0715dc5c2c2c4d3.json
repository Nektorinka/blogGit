{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GIT/blogGit/blogGit/src/components/Forms/CeateNewArticle.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport './signUp.scss';\nimport { renderTags } from './formsFunctions';\nimport { myService } from '../../services/serviceApi';\nimport NewArticleForm from './NewArticleForm';\n\nfunction CreateNewArticle({\n  mainState,\n  history\n}) {\n  const [tagsState, setTag] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    isLogged\n  } = mainState;\n\n  const onSubmit = data => {\n    const {\n      token\n    } = mainState.loggedInfo.user;\n    data.tags = tagsState;\n    myService.createArticle(token, data).then(res => history.push('/'));\n  }; // const inputRef = React.createRef();\n\n\n  if (!isLogged) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }\n    });\n  }\n\n  console.log(mainState);\n  return /*#__PURE__*/React.createElement(NewArticleForm, {\n    mainState: mainState,\n    isLogged: isLogged,\n    history: history,\n    onSubmit: onSubmit,\n    tagsState: tagsState,\n    setTag: setTag,\n    isLogged: isLogged,\n    register: register,\n    errors: errors,\n    createArticle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }) // <div className=\"new-article  \">\n  // \t<form onSubmit={handleSubmit(onSubmit)} className=\"sign_up_form form\">\n  // \t\t<div className=\"form__header-container\">\n  // \t\t\t<h1 className=\"form__header\">Create new article</h1>\n  // \t\t</div>\n  // \t\t<label className=\"form__input-group\">\n  // \t\t\t<span className={`form__input-label' + ${errors.title ? ' form__input-label--error' : null}`}>\n  // \t\t\t\tTitle\n  // \t\t\t</span>\n  // \t\t\t<input\n  // \t\t\t\ttype=\"text\"\n  // \t\t\t\tname=\"title\"\n  // \t\t\t\tplaceholder=\"title\"\n  // \t\t\t\tclassName={`form__input ${errors.title ? ' form__input--error' : null}`}\n  // \t\t\t\tref={register({\n  // \t\t\t\t\trequired: 'Заполните поле',\n  // \t\t\t\t\tmaxLength: { value: 100, message: 'Заголовок должен быть менее 100 символов' }\n  // \t\t\t\t})}\n  // \t\t\t/>\n  // \t\t\t{errors.title && (\n  // \t\t\t\t<span className=\"form__input-label form__input-label--error\">{errors.title.message}</span>\n  // \t\t\t)}\n  // \t\t</label>\n  // \t\t<label className=\"form__input-group\">\n  // \t\t\t<span\n  // \t\t\t\tclassName={`form__input-label' + ${errors.shortDescription\n  // \t\t\t\t\t? ' form__input-label--error'\n  // \t\t\t\t\t: null}`}\n  // \t\t\t>\n  // \t\t\t\tShort description\n  // \t\t\t</span>\n  // \t\t\t<input\n  // \t\t\t\ttype=\"text\"\n  // \t\t\t\tname=\"shortDescription\"\n  // \t\t\t\tplaceholder=\"title\"\n  // \t\t\t\tclassName={`form__input ${errors.shortDescription ? ' form__input--error' : null}`}\n  // \t\t\t\tref={register({\n  // \t\t\t\t\trequired: 'Заполните поле',\n  // \t\t\t\t\tmaxLength: { value: 400, message: 'Описание должно быть менее 400 символов' }\n  // \t\t\t\t})}\n  // \t\t\t/>\n  // \t\t\t{errors.shortDescription && (\n  // \t\t\t\t<span className=\"form__input-label form__input-label--error\">\n  // \t\t\t\t\t{errors.shortDescription.message}\n  // \t\t\t\t</span>\n  // \t\t\t)}\n  // \t\t</label>\n  // \t\t<label className=\"form__input-group\">\n  // \t\t\t<span className={`form__input-label' + ${errors.text ? ' form__input-label--error' : null}`}>\n  // \t\t\t\tText\n  // \t\t\t</span>\n  // \t\t\t<textarea\n  // \t\t\t\ttype=\"text\"\n  // \t\t\t\tname=\"text\"\n  // \t\t\t\tplaceholder=\"text\"\n  // \t\t\t\tclassName={`form__input form__text-area ${errors.text ? ' form__input--error' : null}`}\n  // \t\t\t\trows=\"6\"\n  // \t\t\t\tref={register({\n  // \t\t\t\t\trequired: 'Заполните поле',\n  // \t\t\t\t\tmaxLength: { value: 800, message: 'Статья должна быть менее 800 символов' }\n  // \t\t\t\t})}\n  // \t\t\t/>\n  // \t\t\t{errors.text && (\n  // \t\t\t\t<span className=\"form__input-label form__input-label--error\">{errors.text.message}</span>\n  // \t\t\t)}\n  // \t\t</label>\n  // \t\t<div className=\"form__tags\">\n  // \t\t\t{renderTags(tagsState, { tagsState, setTag })}\n  // \t\t\t<div className=\"form__tag\">\n  // \t\t\t\t<input\n  // \t\t\t\t\ttype=\"text\"\n  // \t\t\t\t\tname=\"addTag\"\n  // \t\t\t\t\tid=\"addTag\"\n  // \t\t\t\t\tclassName=\"form__input\"\n  // \t\t\t\t\tplaceholder=\"Tag\"\n  // \t\t\t\t\tref={inputRef}\n  // \t\t\t\t/>\n  // \t\t\t\t<button type=\"button\" className=\"form__delet-tag-btn mg-right--15px\" onClick={() => setTag([])}>\n  // \t\t\t\t\tDelete\n  // \t\t\t\t</button>\n  // \t\t\t\t<button\n  // \t\t\t\t\ttype=\"button\"\n  // \t\t\t\t\tclassName=\"form__add-tag-btn \"\n  // \t\t\t\t\tonClick={() => {\n  // \t\t\t\t\t\tif (inputRef.current.value !== '') {\n  // \t\t\t\t\t\t\tsetTag([ ...tagsState, inputRef.current.value ]);\n  // \t\t\t\t\t\t\tinputRef.current.value = '';\n  // \t\t\t\t\t\t}\n  // \t\t\t\t\t}}\n  // \t\t\t\t>\n  // \t\t\t\t\tAdd tag\n  // \t\t\t\t</button>\n  // \t\t\t</div>\n  // \t\t</div>\n  // \t\t<button type=\"submit\" className=\"form__submit new-article__send-btn mg-top--10px mg-bottom--40px\">\n  // \t\t\tSend\n  // \t\t</button>\n  // \t</form>\n  // </div>\n  ;\n}\n\nconst mapStateToProps = state => {\n  return {\n    mainState: state.mainReducer\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(CreateNewArticle));","map":{"version":3,"sources":["/Users/apple/Documents/GIT/blogGit/blogGit/src/components/Forms/CeateNewArticle.jsx"],"names":["React","useState","useEffect","connect","useForm","Redirect","withRouter","renderTags","myService","NewArticleForm","CreateNewArticle","mainState","history","tagsState","setTag","register","handleSubmit","errors","isLogged","onSubmit","data","token","loggedInfo","user","tags","createArticle","then","res","push","console","log","mapStateToProps","state","mainReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAA1B,EAAkD;AACjD,QAAM,CAAEC,SAAF,EAAaC,MAAb,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCb,OAAO,EAAlD;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAAeP,SAArB;;AAEA,QAAMQ,QAAQ,GAAIC,IAAD,IAAU;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAYV,SAAS,CAACW,UAAV,CAAqBC,IAAvC;AACAH,IAAAA,IAAI,CAACI,IAAL,GAAYX,SAAZ;AACAL,IAAAA,SAAS,CAACiB,aAAV,CAAwBJ,KAAxB,EAA+BD,IAA/B,EAAqCM,IAArC,CAA2CC,GAAD,IAASf,OAAO,CAACgB,IAAR,CAAa,GAAb,CAAnD;AACA,GAJD,CAPiD,CAajD;;;AAEA,MAAI,CAACV,QAAL,EAAe;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACDW,EAAAA,OAAO,CAACC,GAAR,CAAYnB,SAAZ;AACA,sBACC,oBAAC,cAAD;AACC,IAAA,SAAS,EAAEA,SADZ;AAEC,IAAA,QAAQ,EAAEO,QAFX;AAGC,IAAA,OAAO,EAAEN,OAHV;AAIC,IAAA,QAAQ,EAAEO,QAJX;AAKC,IAAA,SAAS,EAAEN,SALZ;AAMC,IAAA,MAAM,EAAEC,MANT;AAOC,IAAA,QAAQ,EAAEI,QAPX;AAQC,IAAA,QAAQ,EAAEH,QARX;AASC,IAAA,MAAM,EAAEE,MATT;AAUC,IAAA,aAAa,EAAE,IAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAaC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAhHD;AAkHA;;AAED,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNrB,IAAAA,SAAS,EAAEqB,KAAK,CAACC;AADX,GAAP;AAGA,CAJD;;AAMA,eAAe3B,UAAU,CAACH,OAAO,CAAC4B,eAAD,CAAP,CAAyBrB,gBAAzB,CAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport './signUp.scss';\nimport { renderTags } from './formsFunctions';\nimport { myService } from '../../services/serviceApi';\nimport NewArticleForm from './NewArticleForm';\n\nfunction CreateNewArticle({ mainState, history }) {\n\tconst [ tagsState, setTag ] = useState([]);\n\n\tconst { register, handleSubmit, errors } = useForm();\n\n\tconst { isLogged } = mainState;\n\n\tconst onSubmit = (data) => {\n\t\tconst { token } = mainState.loggedInfo.user;\n\t\tdata.tags = tagsState;\n\t\tmyService.createArticle(token, data).then((res) => history.push('/'));\n\t};\n\n\t// const inputRef = React.createRef();\n\n\tif (!isLogged) {\n\t\treturn <Redirect to=\"/sign-in\" />;\n\t}\n\tconsole.log(mainState);\n\treturn (\n\t\t<NewArticleForm\n\t\t\tmainState={mainState}\n\t\t\tisLogged={isLogged}\n\t\t\thistory={history}\n\t\t\tonSubmit={onSubmit}\n\t\t\ttagsState={tagsState}\n\t\t\tsetTag={setTag}\n\t\t\tisLogged={isLogged}\n\t\t\tregister={register}\n\t\t\terrors={errors}\n\t\t\tcreateArticle={true}\n\t\t/>\n\t\t// <div className=\"new-article  \">\n\t\t// \t<form onSubmit={handleSubmit(onSubmit)} className=\"sign_up_form form\">\n\t\t// \t\t<div className=\"form__header-container\">\n\t\t// \t\t\t<h1 className=\"form__header\">Create new article</h1>\n\t\t// \t\t</div>\n\t\t// \t\t<label className=\"form__input-group\">\n\t\t// \t\t\t<span className={`form__input-label' + ${errors.title ? ' form__input-label--error' : null}`}>\n\t\t// \t\t\t\tTitle\n\t\t// \t\t\t</span>\n\t\t// \t\t\t<input\n\t\t// \t\t\t\ttype=\"text\"\n\t\t// \t\t\t\tname=\"title\"\n\t\t// \t\t\t\tplaceholder=\"title\"\n\t\t// \t\t\t\tclassName={`form__input ${errors.title ? ' form__input--error' : null}`}\n\t\t// \t\t\t\tref={register({\n\t\t// \t\t\t\t\trequired: 'Заполните поле',\n\t\t// \t\t\t\t\tmaxLength: { value: 100, message: 'Заголовок должен быть менее 100 символов' }\n\t\t// \t\t\t\t})}\n\t\t// \t\t\t/>\n\t\t// \t\t\t{errors.title && (\n\t\t// \t\t\t\t<span className=\"form__input-label form__input-label--error\">{errors.title.message}</span>\n\t\t// \t\t\t)}\n\t\t// \t\t</label>\n\t\t// \t\t<label className=\"form__input-group\">\n\t\t// \t\t\t<span\n\t\t// \t\t\t\tclassName={`form__input-label' + ${errors.shortDescription\n\t\t// \t\t\t\t\t? ' form__input-label--error'\n\t\t// \t\t\t\t\t: null}`}\n\t\t// \t\t\t>\n\t\t// \t\t\t\tShort description\n\t\t// \t\t\t</span>\n\t\t// \t\t\t<input\n\t\t// \t\t\t\ttype=\"text\"\n\t\t// \t\t\t\tname=\"shortDescription\"\n\t\t// \t\t\t\tplaceholder=\"title\"\n\t\t// \t\t\t\tclassName={`form__input ${errors.shortDescription ? ' form__input--error' : null}`}\n\t\t// \t\t\t\tref={register({\n\t\t// \t\t\t\t\trequired: 'Заполните поле',\n\t\t// \t\t\t\t\tmaxLength: { value: 400, message: 'Описание должно быть менее 400 символов' }\n\t\t// \t\t\t\t})}\n\t\t// \t\t\t/>\n\t\t// \t\t\t{errors.shortDescription && (\n\t\t// \t\t\t\t<span className=\"form__input-label form__input-label--error\">\n\t\t// \t\t\t\t\t{errors.shortDescription.message}\n\t\t// \t\t\t\t</span>\n\t\t// \t\t\t)}\n\t\t// \t\t</label>\n\t\t// \t\t<label className=\"form__input-group\">\n\t\t// \t\t\t<span className={`form__input-label' + ${errors.text ? ' form__input-label--error' : null}`}>\n\t\t// \t\t\t\tText\n\t\t// \t\t\t</span>\n\t\t// \t\t\t<textarea\n\t\t// \t\t\t\ttype=\"text\"\n\t\t// \t\t\t\tname=\"text\"\n\t\t// \t\t\t\tplaceholder=\"text\"\n\t\t// \t\t\t\tclassName={`form__input form__text-area ${errors.text ? ' form__input--error' : null}`}\n\t\t// \t\t\t\trows=\"6\"\n\t\t// \t\t\t\tref={register({\n\t\t// \t\t\t\t\trequired: 'Заполните поле',\n\t\t// \t\t\t\t\tmaxLength: { value: 800, message: 'Статья должна быть менее 800 символов' }\n\t\t// \t\t\t\t})}\n\t\t// \t\t\t/>\n\t\t// \t\t\t{errors.text && (\n\t\t// \t\t\t\t<span className=\"form__input-label form__input-label--error\">{errors.text.message}</span>\n\t\t// \t\t\t)}\n\t\t// \t\t</label>\n\t\t// \t\t<div className=\"form__tags\">\n\t\t// \t\t\t{renderTags(tagsState, { tagsState, setTag })}\n\t\t// \t\t\t<div className=\"form__tag\">\n\t\t// \t\t\t\t<input\n\t\t// \t\t\t\t\ttype=\"text\"\n\t\t// \t\t\t\t\tname=\"addTag\"\n\t\t// \t\t\t\t\tid=\"addTag\"\n\t\t// \t\t\t\t\tclassName=\"form__input\"\n\t\t// \t\t\t\t\tplaceholder=\"Tag\"\n\t\t// \t\t\t\t\tref={inputRef}\n\t\t// \t\t\t\t/>\n\t\t// \t\t\t\t<button type=\"button\" className=\"form__delet-tag-btn mg-right--15px\" onClick={() => setTag([])}>\n\t\t// \t\t\t\t\tDelete\n\t\t// \t\t\t\t</button>\n\t\t// \t\t\t\t<button\n\t\t// \t\t\t\t\ttype=\"button\"\n\t\t// \t\t\t\t\tclassName=\"form__add-tag-btn \"\n\t\t// \t\t\t\t\tonClick={() => {\n\t\t// \t\t\t\t\t\tif (inputRef.current.value !== '') {\n\t\t// \t\t\t\t\t\t\tsetTag([ ...tagsState, inputRef.current.value ]);\n\t\t// \t\t\t\t\t\t\tinputRef.current.value = '';\n\t\t// \t\t\t\t\t\t}\n\t\t// \t\t\t\t\t}}\n\t\t// \t\t\t\t>\n\t\t// \t\t\t\t\tAdd tag\n\t\t// \t\t\t\t</button>\n\t\t// \t\t\t</div>\n\t\t// \t\t</div>\n\n\t\t// \t\t<button type=\"submit\" className=\"form__submit new-article__send-btn mg-top--10px mg-bottom--40px\">\n\t\t// \t\t\tSend\n\t\t// \t\t</button>\n\t\t// \t</form>\n\t\t// </div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmainState: state.mainReducer\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps)(CreateNewArticle));\n"]},"metadata":{},"sourceType":"module"}